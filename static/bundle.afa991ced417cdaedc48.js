!function(e){function t(t){for(var n,s,i=t[0],u=t[1],l=t[2],f=0,p=[];f<i.length;f++)s=i[f],o[s]&&p.push(o[s][0]),o[s]=0;for(n in u)Object.prototype.hasOwnProperty.call(u,n)&&(e[n]=u[n]);for(c&&c(t);p.length;)p.shift()();return a.push.apply(a,l||[]),r()}function r(){for(var e,t=0;t<a.length;t++){for(var r=a[t],n=!0,i=1;i<r.length;i++){var u=r[i];0!==o[u]&&(n=!1)}n&&(a.splice(t--,1),e=s(s.s=r[0]))}return e}var n={},o={1:0};var a=[];function s(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,s),r.l=!0,r.exports}s.m=e,s.c=n,s.d=function(e,t,r){s.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},s.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="";var i=window.webpackJsonp=window.webpackJsonp||[],u=i.push.bind(i);i.push=t,i=i.slice();for(var l=0;l<i.length;l++)t(i[l]);var c=u;a.push([78,0]),r()}({46:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],n=!0,o=!1,a=void 0;try{for(var s,i=e[Symbol.iterator]();!(n=(s=i.next()).done)&&(r.push(s.value),!t||r.length!==t);n=!0);}catch(e){o=!0,a=e}finally{try{!n&&i.return&&i.return()}finally{if(o)throw a}}return r}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),o=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),a=s(r(0));r(5),s(r(81));function s(e){return e&&e.__esModule?e:{default:e}}var i=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.default.Component),o(t,[{key:"_renderObject",value:function(e){return Object.entries(e).map(function(e,t){var r=n(e,2),o=r[0],s=r[1];return a.default.createElement("div",{key:o},"key is: ",o.split("").reverse().join("")," ; Value is: ",s,"; i is: ",t)})}},{key:"render",value:function(){return a.default.createElement("div",null,this._renderObject(this.props.result))}}]),t}();t.default=i},47:function(e){e.exports=[{id:1,symbol:"X",name:"Pauli X"},{id:2,symbol:"Y",name:"Pauli Y"},{id:3,symbol:"Z",name:"Pauli Z"},{id:4,symbol:"H",name:"Hadamard"},{id:5,symbol:"+",name:"CNOT"}]},48:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),o=s(r(0)),a=(r(5),s(r(47)));s(r(81));function s(e){return e&&e.__esModule?e:{default:e}}var i=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),n(t,[{key:"render",value:function(){var e=this;return o.default.createElement("div",{className:"popup"},o.default.createElement("div",{className:"popup_inner"},o.default.createElement("h1",null,"Select Gate"),o.default.createElement("div",{className:"gateilst"},a.default.map(function(t){return o.default.createElement("p",{key:t.id,className:"round pop",onClick:function(){e.props.addsg(t.symbol),e.props.closePopup()}},t.symbol)})),o.default.createElement("button",{onClick:this.props.closePopup,className:"ppexit"},"Close"),o.default.createElement("button",{onClick:function(){e.props.gateclear(),e.props.closePopup()}},"Clear")))}}]),t}();t.default=i},49:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),o=a(r(0));r(5),a(r(81));function a(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var r=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.state={op:" "},r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),n(t,[{key:"componentWillReceiveProps",value:function(e){this.props!=e&&this.setState({op:e.gates[this.props.id]?e.gates[this.props.id]:""})}},{key:"alt",value:function(e){e.preventDefault(),this.setState({op:this.props.id})}},{key:"render",value:function(){var e=this;return o.default.createElement("div",{className:"rnl"},o.default.createElement("div",{className:"round "+(this.state.op?this.state.op:""),onClick:function(){"."!=e.state.op&&(e.props.addsc(e.props.id),e.props.pops())}},o.default.createElement("p",null," ",this.state.op.startsWith("CNOT")?"+":this.state.op," ")),this.props.cn!=this.props.cols-1&&o.default.createElement("div",{className:"h-line"}," ",o.default.createElement("hr",null)," "))}}]),t}();t.default=s},50:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),o=s(r(0)),a=(r(5),s(r(49)));s(r(81));function s(e){return e&&e.__esModule?e:{default:e}}var i=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),n(t,[{key:"render",value:function(){var e=this;return o.default.createElement("div",{className:"cnl"},o.default.createElement("div",{className:"single-row"},[].concat(function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}(Array(this.props.cols))).map(function(t,r){return o.default.createElement("div",{key:r},o.default.createElement(a.default,{key:"R"+e.props.rid+r,id:"R"+e.props.rid+r,op:"R"+e.props.rid+r,cols:e.props.cols,cn:r,pops:e.props.pop,gates:e.props.gates,addsc:e.props.addsc}),e.props.rid!=e.props.rows-1&&o.default.createElement("div",{className:"v-line"}," ",o.default.createElement("hr",null)," "))})))}}]),t}();t.default=i},78:function(e,t,r){"use strict";var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),o=c(r(0)),a=r(5),s=c(r(24)),i=c(r(50)),u=c(r(48)),l=c(r(46));c(r(81));function c(e){return e&&e.__esModule?e:{default:e}}var f=function(e){function t(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var e=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.state={rows:4,cols:5,gates:{},showp:!1,sc:"",sg:"",result:{},sr:!1},e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),n(t,[{key:"togglePopup",value:function(){this.setState({showp:!this.state.showp})}},{key:"addsc",value:function(e){this.setState({sc:e})}},{key:"addsg",value:function(e){var t=this,r="";"+"==e&&(r=prompt("Enter target Qubit : ")),this.setState({sg:"+"==e?"CNOT "+r:e},function(){var e=t.state.gates;e[t.state.sc]=t.state.sg,r&&(e["R"+(r-1)+t.state.sc[2]]=".",r=""),t.setState({gates:e})})}},{key:"addr",value:function(e){e.preventDefault(),this.setState({rows:this.state.rows+1})}},{key:"remr",value:function(e){var t=this;e.preventDefault(),1!=this.state.rows&&this.setState({rows:this.state.rows-1},function(){var e=t.state.gates;for(var r in e)if(r[1]==t.state.rows){if("."==e[r])for(var n in e)if(e[n]=="CNOT "+(Number(r[1])+1)){delete e[n];break}delete e[r]}t.setState({gates:e})})}},{key:"addc",value:function(e){e.preventDefault(),this.setState({cols:this.state.cols+1})}},{key:"remc",value:function(e){var t=this;e.preventDefault(),1!=this.state.cols&&this.setState({cols:this.state.cols-1},function(){var e=t.state.gates;for(var r in e)r[2]==t.state.cols&&delete e[r];t.setState({gates:e})})}},{key:"gateclear",value:function(){var e=this.state.gates,t=this.state.sc;"CNOT"==this.state.sg.split(" ")[0]&&delete e["R"+(e[t].split(" ")[1]-1)+t.slice(-1)];delete e[this.state.sc],this.setState({gates:e})}},{key:"build",value:function(e){var t=this;e.preventDefault();var r=this.state.gates,n={};for(var o in r)if("."!=r[o]){var a=o[2];if(n[a]?n[a].push(r[o]+" "+o[1]):n[a]=[r[o]+" "+o[1]],"CNOT"==r[o].split(" ")[0]){var i=r[o].slice(-1);n[a][n[a].length-1]="CNOT "+o[1]+" "+Number(i-1)}}console.log(n),(0,s.default)({method:"post",url:"http://127.0.0.1:5000/",headers:{"Content-type":"application/json"},data:n}).then(function(e){console.log("here is the response from server ",e.data),t.setState({result:e.data,sr:!t.state.sr})}).catch(function(e){console.log("here is the error on a post request from the python server of listname ",e.response)})}},{key:"clearAll",value:function(e){e.preventDefault(),this.setState({gates:{},result:{},sr:!this.state.sr})}},{key:"render",value:function(){var e=this;return o.default.createElement("div",null,o.default.createElement("div",{className:"circuitBoard"},[].concat(function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}(Array(this.state.rows))).map(function(t,r){return o.default.createElement(i.default,{key:r,rid:r,cols:e.state.cols,rows:e.state.rows,gates:e.state.gates,pop:e.togglePopup.bind(e),addsc:e.addsc.bind(e)})})),o.default.createElement("div",null,"Rows:",o.default.createElement("button",{onClick:this.addr.bind(this)},"+"),o.default.createElement("button",{onClick:this.remr.bind(this)},"-"),"Columns:",o.default.createElement("button",{onClick:this.addc.bind(this)},"+"),o.default.createElement("button",{onClick:this.remc.bind(this)},"-"),o.default.createElement("button",{onClick:this.clearAll.bind(this)},"Clear"),o.default.createElement("button",{onClick:this.build.bind(this)},"OK")),this.state.showp?o.default.createElement(u.default,{closePopup:this.togglePopup.bind(this),addsg:this.addsg.bind(this),gateclear:this.gateclear.bind(this)}):null,o.default.createElement("div",null,this.state.sr?o.default.createElement(l.default,{result:this.state.result}):null))}}]),t}();(0,a.render)(o.default.createElement(f,null),document.getElementById("main"))},81:function(e,t){}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvcmVzdWx0LmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL3BvcHVwLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL3JvdW5kLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL3Jvdy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwLmpzIl0sIm5hbWVzIjpbIndlYnBhY2tKc29ucENhbGxiYWNrIiwiZGF0YSIsIm1vZHVsZUlkIiwiY2h1bmtJZCIsImNodW5rSWRzIiwibW9yZU1vZHVsZXMiLCJleGVjdXRlTW9kdWxlcyIsImkiLCJyZXNvbHZlcyIsImxlbmd0aCIsImluc3RhbGxlZENodW5rcyIsInB1c2giLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJtb2R1bGVzIiwicGFyZW50SnNvbnBGdW5jdGlvbiIsInNoaWZ0IiwiZGVmZXJyZWRNb2R1bGVzIiwiYXBwbHkiLCJjaGVja0RlZmVycmVkTW9kdWxlcyIsInJlc3VsdCIsImRlZmVycmVkTW9kdWxlIiwiZnVsZmlsbGVkIiwiaiIsImRlcElkIiwic3BsaWNlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsInMiLCJpbnN0YWxsZWRNb2R1bGVzIiwiMSIsImV4cG9ydHMiLCJtb2R1bGUiLCJsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJkZWZpbmVQcm9wZXJ0eSIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwidmFsdWUiLCJuIiwiX19lc01vZHVsZSIsIm9iamVjdCIsInByb3BlcnR5IiwicCIsImpzb25wQXJyYXkiLCJ3aW5kb3ciLCJvbGRKc29ucEZ1bmN0aW9uIiwiYmluZCIsInNsaWNlIiwiUmVzdWx0IiwiUmVhY3QiLCJDb21wb25lbnQiLCJvYmoiLCJlbnRyaWVzIiwibWFwIiwiX3JlZiIsIl9yZWYyIiwiX3NsaWNlZFRvQXJyYXkiLCJrZXkiLCJfcmVhY3QyIiwiZGVmYXVsdCIsImNyZWF0ZUVsZW1lbnQiLCJzcGxpdCIsInJldmVyc2UiLCJqb2luIiwidGhpcyIsIl9yZW5kZXJPYmplY3QiLCJwcm9wcyIsIlBvcHVwIiwiX3RoaXMyIiwiY2xhc3NOYW1lIiwiZ2F0ZXMiLCJnYXRlIiwiaWQiLCJvbkNsaWNrIiwiYWRkc2ciLCJzeW1ib2wiLCJjbG9zZVBvcHVwIiwiZ2F0ZWNsZWFyIiwiUm91bmQiLCJfY2xhc3NDYWxsQ2hlY2siLCJfdGhpcyIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiX19wcm90b19fIiwiZ2V0UHJvdG90eXBlT2YiLCJzdGF0ZSIsIm9wIiwibmV4dFByb3BzIiwic2V0U3RhdGUiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiYWRkc2MiLCJwb3BzIiwic3RhcnRzV2l0aCIsImNuIiwiY29scyIsIlJvdyIsImNvbmNhdCIsIl90b0NvbnN1bWFibGVBcnJheSIsIkFycmF5IiwiZSIsIl9yb3VuZDIiLCJyaWQiLCJwb3AiLCJyb3dzIiwiX3JlYWN0RG9tIiwiQXBwIiwic2hvd3AiLCJzYyIsInNnIiwic3IiLCJjaWQiLCJnbmFtZSIsImN0YXJnZXQiLCJwcm9tcHQiLCJfdGhpczMiLCJwcm9wIiwidHByb3AiLCJOdW1iZXIiLCJfdGhpczQiLCJfdGhpczUiLCJxIiwidGMiLCJ0ZW1wIiwiY29uc29sZSIsImxvZyIsIl9heGlvczIiLCJtZXRob2QiLCJ1cmwiLCJoZWFkZXJzIiwiQ29udGVudC10eXBlIiwidGhlbiIsInJlc3BvbnNlIiwiY2F0Y2giLCJlcnJvciIsIl90aGlzNiIsIl9yb3cyIiwidG9nZ2xlUG9wdXAiLCJhZGRyIiwicmVtciIsImFkZGMiLCJyZW1jIiwiY2xlYXJBbGwiLCJidWlsZCIsIl9wb3B1cDIiLCJfcmVzdWx0MiIsInJlbmRlciIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiXSwibWFwcGluZ3MiOiJhQUNBLFNBQUFBLEVB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QU01QixLQUFLa0IsTUFBT2EsVUFBV2IsS0FBS2EsVUFBVS9CLEtBQUtrQixRQUFXLEtBRy9JTixFQUFBQyxRQUFBQyxjQUFBLFdBRUlJLEtBQUtvQixNQUFNeUIsR0FBS25ELEVBQUFDLFFBQUFDLGNBQUNvRixFQUFBckYsU0FBTzlDLE9BQVFtRCxLQUFLb0IsTUFBTXZFLFNBQVksaUJBUS9FLEVBQUEyRixFQUFBeUMsUUFBT3ZGLEVBQUFDLFFBQUFDLGNBQUM2QyxFQUFELE1BQVN5QyxTQUFTQyxlQUFlIiwiZmlsZSI6ImJ1bmRsZS5hZmE5OTFjZWQ0MTdjZGFlZGM0OC5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIGluc3RhbGwgYSBKU09OUCBjYWxsYmFjayBmb3IgY2h1bmsgbG9hZGluZ1xuIFx0ZnVuY3Rpb24gd2VicGFja0pzb25wQ2FsbGJhY2soZGF0YSkge1xuIFx0XHR2YXIgY2h1bmtJZHMgPSBkYXRhWzBdO1xuIFx0XHR2YXIgbW9yZU1vZHVsZXMgPSBkYXRhWzFdO1xuIFx0XHR2YXIgZXhlY3V0ZU1vZHVsZXMgPSBkYXRhWzJdO1xuIFx0XHQvLyBhZGQgXCJtb3JlTW9kdWxlc1wiIHRvIHRoZSBtb2R1bGVzIG9iamVjdCxcbiBcdFx0Ly8gdGhlbiBmbGFnIGFsbCBcImNodW5rSWRzXCIgYXMgbG9hZGVkIGFuZCBmaXJlIGNhbGxiYWNrXG4gXHRcdHZhciBtb2R1bGVJZCwgY2h1bmtJZCwgaSA9IDAsIHJlc29sdmVzID0gW107XG4gXHRcdGZvcig7aSA8IGNodW5rSWRzLmxlbmd0aDsgaSsrKSB7XG4gXHRcdFx0Y2h1bmtJZCA9IGNodW5rSWRzW2ldO1xuIFx0XHRcdGlmKGluc3RhbGxlZENodW5rc1tjaHVua0lkXSkge1xuIFx0XHRcdFx0cmVzb2x2ZXMucHVzaChpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF1bMF0pO1xuIFx0XHRcdH1cbiBcdFx0XHRpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSAwO1xuIFx0XHR9XG4gXHRcdGZvcihtb2R1bGVJZCBpbiBtb3JlTW9kdWxlcykge1xuIFx0XHRcdGlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb3JlTW9kdWxlcywgbW9kdWxlSWQpKSB7XG4gXHRcdFx0XHRtb2R1bGVzW21vZHVsZUlkXSA9IG1vcmVNb2R1bGVzW21vZHVsZUlkXTtcbiBcdFx0XHR9XG4gXHRcdH1cbiBcdFx0aWYocGFyZW50SnNvbnBGdW5jdGlvbikgcGFyZW50SnNvbnBGdW5jdGlvbihkYXRhKTtcbiBcdFx0d2hpbGUocmVzb2x2ZXMubGVuZ3RoKSB7XG4gXHRcdFx0cmVzb2x2ZXMuc2hpZnQoKSgpO1xuIFx0XHR9XG5cbiBcdFx0Ly8gYWRkIGVudHJ5IG1vZHVsZXMgZnJvbSBsb2FkZWQgY2h1bmsgdG8gZGVmZXJyZWQgbGlzdFxuIFx0XHRkZWZlcnJlZE1vZHVsZXMucHVzaC5hcHBseShkZWZlcnJlZE1vZHVsZXMsIGV4ZWN1dGVNb2R1bGVzIHx8IFtdKTtcblxuIFx0XHQvLyBydW4gZGVmZXJyZWQgbW9kdWxlcyB3aGVuIGFsbCBjaHVua3MgcmVhZHlcbiBcdFx0cmV0dXJuIGNoZWNrRGVmZXJyZWRNb2R1bGVzKCk7XG4gXHR9O1xuIFx0ZnVuY3Rpb24gY2hlY2tEZWZlcnJlZE1vZHVsZXMoKSB7XG4gXHRcdHZhciByZXN1bHQ7XG4gXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBkZWZlcnJlZE1vZHVsZXMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHR2YXIgZGVmZXJyZWRNb2R1bGUgPSBkZWZlcnJlZE1vZHVsZXNbaV07XG4gXHRcdFx0dmFyIGZ1bGZpbGxlZCA9IHRydWU7XG4gXHRcdFx0Zm9yKHZhciBqID0gMTsgaiA8IGRlZmVycmVkTW9kdWxlLmxlbmd0aDsgaisrKSB7XG4gXHRcdFx0XHR2YXIgZGVwSWQgPSBkZWZlcnJlZE1vZHVsZVtqXTtcbiBcdFx0XHRcdGlmKGluc3RhbGxlZENodW5rc1tkZXBJZF0gIT09IDApIGZ1bGZpbGxlZCA9IGZhbHNlO1xuIFx0XHRcdH1cbiBcdFx0XHRpZihmdWxmaWxsZWQpIHtcbiBcdFx0XHRcdGRlZmVycmVkTW9kdWxlcy5zcGxpY2UoaS0tLCAxKTtcbiBcdFx0XHRcdHJlc3VsdCA9IF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gZGVmZXJyZWRNb2R1bGVbMF0pO1xuIFx0XHRcdH1cbiBcdFx0fVxuIFx0XHRyZXR1cm4gcmVzdWx0O1xuIFx0fVxuXG4gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuIFx0Ly8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4gXHQvLyBQcm9taXNlID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxuIFx0dmFyIGluc3RhbGxlZENodW5rcyA9IHtcbiBcdFx0MTogMFxuIFx0fTtcblxuIFx0Ly8gc2NyaXB0IHBhdGggZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIGpzb25wU2NyaXB0U3JjKGNodW5rSWQpIHtcbiBcdFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18ucCArIFwiXCIgKyAoe31bY2h1bmtJZF18fGNodW5rSWQpICsgXCIuXCIgKyB7fVtjaHVua0lkXSArIFwiLmpzXCJcbiBcdH1cblxuIFx0dmFyIGRlZmVycmVkTW9kdWxlcyA9IFtdO1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuIFx0XHRcdFx0Z2V0OiBnZXR0ZXJcbiBcdFx0XHR9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0dmFyIGpzb25wQXJyYXkgPSB3aW5kb3dbXCJ3ZWJwYWNrSnNvbnBcIl0gPSB3aW5kb3dbXCJ3ZWJwYWNrSnNvbnBcIl0gfHwgW107XG4gXHR2YXIgb2xkSnNvbnBGdW5jdGlvbiA9IGpzb25wQXJyYXkucHVzaC5iaW5kKGpzb25wQXJyYXkpO1xuIFx0anNvbnBBcnJheS5wdXNoID0gd2VicGFja0pzb25wQ2FsbGJhY2s7XG4gXHRqc29ucEFycmF5ID0ganNvbnBBcnJheS5zbGljZSgpO1xuIFx0Zm9yKHZhciBpID0gMDsgaSA8IGpzb25wQXJyYXkubGVuZ3RoOyBpKyspIHdlYnBhY2tKc29ucENhbGxiYWNrKGpzb25wQXJyYXlbaV0pO1xuIFx0dmFyIHBhcmVudEpzb25wRnVuY3Rpb24gPSBvbGRKc29ucEZ1bmN0aW9uO1xuXG5cbiBcdC8vIGFkZCBlbnRyeSBtb2R1bGUgdG8gZGVmZXJyZWQgbGlzdFxuIFx0ZGVmZXJyZWRNb2R1bGVzLnB1c2goWzc4LDBdKTtcbiBcdC8vIHJ1biBkZWZlcnJlZCBtb2R1bGVzIHdoZW4gcmVhZHlcbiBcdHJldHVybiBjaGVja0RlZmVycmVkTW9kdWxlcygpO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHJlbmRlciB9IGZyb20gJ3JlYWN0LWRvbSc7XG5cbmltcG9ydCBzdHlsZXMgZnJvbSAnLi4vc3R5bGUvc3R5bGUuc2Nzcyc7XG5cbmNsYXNzIFJlc3VsdCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudHtcbiAgICBfcmVuZGVyT2JqZWN0KG9iail7XG5cdFx0cmV0dXJuIE9iamVjdC5lbnRyaWVzKG9iaikubWFwKChba2V5LCB2YWx1ZV0sIGkpID0+IHtcblx0XHRcdHJldHVybiAoXG5cdFx0XHRcdDxkaXYga2V5PXtrZXl9PlxuXHRcdFx0XHRcdGtleSBpczoge2tleS5zcGxpdChcIlwiKS5yZXZlcnNlKCkuam9pbihcIlwiKX0gO1xuXHRcdFx0XHRcdFZhbHVlIGlzOiB7dmFsdWV9O1xuICAgICAgICAgICAgICAgICAgICBpIGlzOiB7aX1cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHQpXG5cdFx0fSlcblx0fVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICB7dGhpcy5fcmVuZGVyT2JqZWN0KHRoaXMucHJvcHMucmVzdWx0KX1cbiAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUmVzdWx0OyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyByZW5kZXIgfSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IGdhdGVzIGZyb20gJy4uL2RhdGEvZ2F0ZXMuanNvbic7XG5cbmltcG9ydCBzdHlsZSBmcm9tICcuLi9zdHlsZS9zdHlsZS5zY3NzJztcblxuY2xhc3MgUG9wdXAgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnTCoHtcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvcHVwXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9wdXBfaW5uZXJcIj5cbiAgICAgICAgICA8aDE+U2VsZWN0IEdhdGU8L2gxPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ2F0ZWlsc3RcIj5cbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgZ2F0ZXMubWFwKChnYXRlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICg8cFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9e2dhdGUuaWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInJvdW5kIHBvcFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eyAoKSA9PiB7IHRoaXMucHJvcHMuYWRkc2coZ2F0ZS5zeW1ib2wpOyB0aGlzLnByb3BzLmNsb3NlUG9wdXAoKSB9fSA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2dhdGUuc3ltYm9sfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4pO1xuICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17dGhpcy5wcm9wcy5jbG9zZVBvcHVwfSBjbGFzc05hbWU9XCJwcGV4aXRcIj5DbG9zZTwvYnV0dG9uPlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17ICgpID0+IHt0aGlzLnByb3BzLmdhdGVjbGVhcigpOyB0aGlzLnByb3BzLmNsb3NlUG9wdXAoKSB9fT5DbGVhcjwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUG9wdXA7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi4vc3R5bGUvc3R5bGUuc2Nzcyc7XG5cbmNsYXNzIFJvdW5kIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50e1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKXtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBvcCA6ICBcIiBcIlxuICAgICAgICB9XG5cbiAgICB9XG5cbiAgICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcyl7XG4gICAgICAgIGlmKHRoaXMucHJvcHMgIT0gbmV4dFByb3BzKXtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBvcDogbmV4dFByb3BzLmdhdGVzW3RoaXMucHJvcHMuaWRdID8gbmV4dFByb3BzLmdhdGVzW3RoaXMucHJvcHMuaWRdIDogJycgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhbHQoZXZlbnQpe1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB0aGlzLnNldFN0YXRlKCB7IG9wIDogdGhpcy5wcm9wcy5pZH0gKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKXtcbiAgICAgICAgcmV0dXJuKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJybmxcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YHJvdW5kICR7dGhpcy5zdGF0ZS5vcCA/IHRoaXMuc3RhdGUub3AgOiAnJ31gfSBcbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHRoaXMuc3RhdGUub3AgIT0gXCIuXCIpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuYWRkc2ModGhpcy5wcm9wcy5pZCk7IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMucG9wcygpXG4gICAgICAgICAgICAgICAgICAgICAgICB9ICBcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxwPiB7IHRoaXMuc3RhdGUub3Auc3RhcnRzV2l0aChcIkNOT1RcIikgPyAnKycgOiB0aGlzLnN0YXRlLm9wIH0gPC9wPiAgICAgICAgICBcbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuY24gIT0gdGhpcy5wcm9wcy5jb2xzLTEgJiYgPGRpdiBjbGFzc05hbWU9XCJoLWxpbmVcIj4gPGhyIC8+IDwvZGl2PlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUm91bmQ7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHJlbmRlciB9IGZyb20gJ3JlYWN0LWRvbSc7XG5cbmltcG9ydCBSb3VuZCBmcm9tICcuL3JvdW5kLmpzJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi4vc3R5bGUvc3R5bGUuc2Nzcyc7XG5cbmNsYXNzIFJvdyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudHtcbiAgICByZW5kZXIoKXtcblxuXG4gICAgICAgIHJldHVybihcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY25sXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzaW5nbGUtcm93XCI+XG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFsuLi5BcnJheSh0aGlzLnByb3BzLmNvbHMpXS5tYXAoKGUsIGkpID0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBrZXk9e2l9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Um91bmQga2V5PXtgUiR7dGhpcy5wcm9wcy5yaWR9JHtpfWB9IGlkPXtgUiR7dGhpcy5wcm9wcy5yaWR9JHtpfWB9IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3A9e2BSJHt0aGlzLnByb3BzLnJpZH0ke2l9YH0gY29scz17dGhpcy5wcm9wcy5jb2xzfSBjbj17aX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvcHM9e3RoaXMucHJvcHMucG9wfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2F0ZXM9e3RoaXMucHJvcHMuZ2F0ZXN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRzYz17dGhpcy5wcm9wcy5hZGRzY31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9wcy5yaWQgIT0gdGhpcy5wcm9wcy5yb3dzLTEgJiYgPGRpdiBjbGFzc05hbWU9XCJ2LWxpbmVcIj4gPGhyIC8+IDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgXG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBSb3c7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHJlbmRlciB9IGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xuXG5pbXBvcnQgUm93IGZyb20gJy4vY29tcG9uZW50cy9yb3cuanMnO1xuaW1wb3J0IFBvcHVwIGZyb20gJy4vY29tcG9uZW50cy9wb3B1cC5qcyc7XG5pbXBvcnQgUmVzdWx0IGZyb20gJy4vY29tcG9uZW50cy9yZXN1bHQuanMnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuL3N0eWxlL3N0eWxlLnNjc3MnO1xuXG5jbGFzcyBBcHAgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnR7XG4gICAgY29uc3RydWN0b3IoKXtcbiAgICAgICAgc3VwZXIoKTtcblxuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgcm93czogNCxcbiAgICAgICAgICAgIGNvbHM6IDUsXG4gICAgICAgICAgICBnYXRlczoge30sXG4gICAgICAgICAgICBzaG93cDogZmFsc2UsXG4gICAgICAgICAgICBzYzogJycsXG4gICAgICAgICAgICBzZzogJycsXG4gICAgICAgICAgICByZXN1bHQ6IHt9LFxuICAgICAgICAgICAgc3IgOiBmYWxzZVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgdG9nZ2xlUG9wdXAoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3Nob3dwOiAhdGhpcy5zdGF0ZS5zaG93cH0pO1xuICAgIH1cblxuICAgIGFkZHNjKGNpZCl7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoIHtzYzogY2lkfSApO1xuICAgIH1cblxuICAgIGFkZHNnKGduYW1lKXtcbiAgICAgICAgbGV0IGN0YXJnZXQgPSAnJztcbiAgICAgICAgaWYoZ25hbWUgPT0gJysnKXtcbiAgICAgICAgICAgIGN0YXJnZXQgPSBwcm9tcHQoYEVudGVyIHRhcmdldCBRdWJpdCA6IGApO1xuICAgICAgICB9IFxuICAgICAgICB0aGlzLnNldFN0YXRlKCB7c2c6IGduYW1lID09ICcrJyA/IFwiQ05PVCBcIitjdGFyZ2V0IDogZ25hbWV9LCAoKSA9PiB7XG4gICAgICAgICAgICBsZXQgZ2F0ZXMgPSB0aGlzLnN0YXRlLmdhdGVzO1xuICAgICAgICAgICAgZ2F0ZXNbdGhpcy5zdGF0ZS5zY10gPSB0aGlzLnN0YXRlLnNnO1xuXG4gICAgICAgICAgICBpZihjdGFyZ2V0KXtcbiAgICAgICAgICAgICAgICBnYXRlc1tgUiR7Y3RhcmdldC0xfSR7dGhpcy5zdGF0ZS5zY1syXX1gXSA9IFwiLlwiO1xuICAgICAgICAgICAgICAgIGN0YXJnZXQ9Jyc7ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7Z2F0ZXN9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgYWRkcihldmVudCl7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3Jvd3M6IHRoaXMuc3RhdGUucm93cyArIDF9KTtcbiAgICB9XG5cbiAgICByZW1yKGV2ZW50KXtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgaWYodGhpcy5zdGF0ZS5yb3dzIT0xKSB0aGlzLnNldFN0YXRlKHtyb3dzOiB0aGlzLnN0YXRlLnJvd3MgLSAxfSwgKCkgPT4ge1xuICAgICAgICAgICAgbGV0IGdhdGVzID0gdGhpcy5zdGF0ZS5nYXRlcztcbiAgICAgICAgICAgIGZvcihsZXQgcHJvcCBpbiBnYXRlcyl7XG4gICAgICAgICAgICAgICAgaWYocHJvcFsxXSA9PSB0aGlzLnN0YXRlLnJvd3Mpe1xuICAgICAgICAgICAgICAgICAgICBpZihnYXRlc1twcm9wXSA9PSBcIi5cIil7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IobGV0IHRwcm9wIGluIGdhdGVzKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihnYXRlc1t0cHJvcF0gPT0gYENOT1QgJHtOdW1iZXIocHJvcFsxXSkgKyAxfWApe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgZ2F0ZXNbdHByb3BdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOyAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGdhdGVzW3Byb3BdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe2dhdGVzfSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGFkZGMoZXZlbnQpe1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtjb2xzOiB0aGlzLnN0YXRlLmNvbHMgKyAxfSk7XG4gICAgfVxuXG4gICAgcmVtYyhldmVudCl7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGlmKHRoaXMuc3RhdGUuY29scyE9MSkgdGhpcy5zZXRTdGF0ZSh7Y29sczogdGhpcy5zdGF0ZS5jb2xzIC0gMX0sICgpID0+IHtcbiAgICAgICAgICAgIGxldCBnYXRlcyA9IHRoaXMuc3RhdGUuZ2F0ZXM7ICAgICAgICBcbiAgICAgICAgICAgIGZvcihsZXQgcHJvcCBpbiBnYXRlcyl7XG4gICAgICAgICAgICAgICAgaWYocHJvcFsyXSA9PSB0aGlzLnN0YXRlLmNvbHMpIGRlbGV0ZSBnYXRlc1twcm9wXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe2dhdGVzfSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGdhdGVjbGVhcigpe1xuICAgICAgICBsZXQgZ2F0ZXMgPSB0aGlzLnN0YXRlLmdhdGVzO1xuICAgICAgICBsZXQgc2MgPSB0aGlzLnN0YXRlLnNjO1xuICAgICAgICBsZXQgc2cgPSB0aGlzLnN0YXRlLnNnLnNwbGl0KFwiIFwiKVswXTtcbiAgICAgICAgaWYoc2cgPT0gJ0NOT1QnKXtcbiAgICAgICAgICAgIGxldCB0b2RlbCA9IGdhdGVzW3NjXS5zcGxpdChcIiBcIilbMV0gLSAxO1xuICAgICAgICAgICAgZGVsZXRlIGdhdGVzW2BSJHt0b2RlbH0ke3NjLnNsaWNlKC0xKX1gXVxuICAgICAgICB9XG4gICAgICAgIGRlbGV0ZSBnYXRlc1t0aGlzLnN0YXRlLnNjXTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7Z2F0ZXN9KTtcbiAgICB9XG5cbiAgICBidWlsZChldmVudCl7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGxldCBnYXRlcyA9IHRoaXMuc3RhdGUuZ2F0ZXM7XG4gICAgICAgIGxldCBxPXt9O1xuICAgICAgICBmb3IobGV0IHByb3AgaW4gZ2F0ZXMpe1xuICAgICAgICAgICAgaWYoZ2F0ZXNbcHJvcF0gIT0gXCIuXCIpe1xuICAgICAgICAgICAgICAgIGxldCB0YyA9IHByb3BbMl07XG4gICAgICAgICAgICAgICAgcVt0Y10gPyBxW3RjXS5wdXNoKGAke2dhdGVzW3Byb3BdfSAke3Byb3BbMV19YCkgOiBxW3RjXSA9IFtgJHtnYXRlc1twcm9wXX0gJHtwcm9wWzFdfWBdO1xuICAgICAgICAgICAgICAgIGlmKGdhdGVzW3Byb3BdLnNwbGl0KFwiIFwiKVswXSA9PSAnQ05PVCcpe1xuICAgICAgICAgICAgICAgICAgICBsZXQgdGVtcCA9IGdhdGVzW3Byb3BdLnNsaWNlKC0xKTtcbiAgICAgICAgICAgICAgICAgICAgcVt0Y11bcVt0Y10ubGVuZ3RoIC0gMV0gPSBgQ05PVCAke3Byb3BbMV19ICR7TnVtYmVyKHRlbXAgLSAxKX1gO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zb2xlLmxvZyhxKTtcbiAgICAgICAgYXhpb3Moe1xuICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsXG4gICAgICAgICAgICB1cmw6ICdodHRwOi8vMTI3LjAuMC4xOjUwMDAvJyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgJ0NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRhdGE6IHFcbiAgICAgICAgfSlcbiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnaGVyZSBpcyB0aGUgcmVzcG9uc2UgZnJvbSBzZXJ2ZXIgJywgcmVzcG9uc2VbJ2RhdGEnXSk7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtyZXN1bHQ6IHJlc3BvbnNlWydkYXRhJ10sIHNyOiAhdGhpcy5zdGF0ZS5zcn0pO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnaGVyZSBpcyB0aGUgZXJyb3Igb24gYSBwb3N0IHJlcXVlc3QgZnJvbSB0aGUgcHl0aG9uIHNlcnZlciBvZiBsaXN0bmFtZSAnLCBlcnJvci5yZXNwb25zZSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGNsZWFyQWxsKGV2ZW50KXtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7Z2F0ZXMgOiB7fSwgcmVzdWx0OiB7fSwgc3I6ICF0aGlzLnN0YXRlLnNyfSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCl7XG4gICAgICAgIHJldHVybihcbiAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNpcmN1aXRCb2FyZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsuLi5BcnJheSh0aGlzLnN0YXRlLnJvd3MpXS5tYXAoKGUsIGkpID0+IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Um93IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtpfSByaWQ9e2l9IGNvbHM9e3RoaXMuc3RhdGUuY29sc30gcm93cz17dGhpcy5zdGF0ZS5yb3dzfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2F0ZXM9e3RoaXMuc3RhdGUuZ2F0ZXN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3A9e3RoaXMudG9nZ2xlUG9wdXAuYmluZCh0aGlzKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZHNjPXt0aGlzLmFkZHNjLmJpbmQodGhpcyl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICBSb3dzOlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLmFkZHIuYmluZCh0aGlzKX0+KzwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLnJlbXIuYmluZCh0aGlzKX0+LTwvYnV0dG9uPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICBDb2x1bW5zOlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLmFkZGMuYmluZCh0aGlzKX0+KzwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLnJlbWMuYmluZCh0aGlzKX0+LTwvYnV0dG9uPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3RoaXMuY2xlYXJBbGwuYmluZCh0aGlzKX0+Q2xlYXI8L2J1dHRvbj4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17dGhpcy5idWlsZC5iaW5kKHRoaXMpfT5PSzwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRlLnNob3dwID8gPFBvcHVwIGNsb3NlUG9wdXA9e3RoaXMudG9nZ2xlUG9wdXAuYmluZCh0aGlzKX0gYWRkc2c9e3RoaXMuYWRkc2cuYmluZCh0aGlzKX0gZ2F0ZWNsZWFyPXt0aGlzLmdhdGVjbGVhci5iaW5kKHRoaXMpfS8+IDogbnVsbFxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5zciA/IDxSZXN1bHQgcmVzdWx0PXt0aGlzLnN0YXRlLnJlc3VsdH0vPiA6IG51bGxcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbnJlbmRlcig8QXBwIC8+LCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFpbicpKTsiXSwic291cmNlUm9vdCI6IiJ9